~~~~~~~~~~      Data Structure and Algorithm       ~~~~~~~~~~

What is Data Structure and Algorithm? 
    Data Structure and Algorithm is a concept which contains all the necessary steps and procedures to organize and store data in a proper way.

Why do we need DSA?
    By learning DSA, we will able to solve a problem in a more procedural approach by considering several factors,such that we can able to maintain a efficient program, meanwhile getting effctive results

What are the types of DSA available? 
    When it comes to Data Structures, it has two types namely,
        1. Primitive Data Structure: 
            This type of data strutures includes the basic data types available in all the programming languages. Examples of primitive data structures includes 1. Integer, 2. Float, 3. Character, 4. Boolean, 5. Pointers(_for some languages_)
        
        2. Non-Primitive Data Structures: 
            This type of data structures includes the highly complex data types available in the pogramming languages. This Data structure consists of 2 types namely, 
            
            1. Linear Data Structure: 
                This type of data structure holds the data which is in Linear or Sequential order. Examples of Linear data structures includes 1. Arrays, 2. LinkedList, 3. Stacks, 4. Queues

            2. Non-Linear Data Structure: 
                This type of Data Structures holds the data which are not arranged in sequential order. We use this data struture type to handle data which is in complex relationships. Examples of Non-Linear data structures includes 1. Trees, 2. Graphs, 3. Heaps, 4. Hash Tables, 5. Trie

    When it comes to Algorithm, it has severals kinds namely, 
        1. Search Algorithm: 
            We have 2 kinds of Searching Algorithm namely,
            1. Linear Search: 
                In this kind of searching, the searching process





What is Binary Search tree? 
    A binary search tree is a type of Non-linear Data Structure, which is designed by the heirarchical structure, which is basically a distributed branch from two nodes, namely left node and right node. 
    The branches and the values of the left node will always be smaller than the branches and the values of the right node. 


    Based on this, there are several operations performed on this tree data structure. One of such concepts are 
        1. Traversal: 
            This process basically runs through the whole data list available, which means visiting of every element of node in the data structure, examining in the order. 

            Types of Traversal:
            1. In-order Traversal: 
                LT - RO - RT
                1    2    3

                Ascending order

            2. Pre-order Traversal: 
                RO - LT - RT
                1    2    3

                Prefix order

            3. Post- order Traversal:
                LT - RT - RO
                1    2    3

                Post order


            





